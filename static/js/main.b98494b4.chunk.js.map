{"version":3,"sources":["service.status.component.js","service.action.js","incident.log.component.js","azure.service.dashboard.js","service.status.reducer.js","incident.log.reducer.js","all.reducer.js","app.store.js","index.js"],"names":["ServiceStatus","props","state","time","Date","now","this","onApiRequest","setInterval","clearInterval","localState","map","data","id","key","userId","title","Component","mapDispatchToProps","dispatch","fetch","then","response","json","error","console","log","type","payload","connect","service","IncidentLog","AzureServiceDashboard","serviceClick","setState","route","isService","incidentClick","isIncident","onClick","INITIAL_STATE","ServiceStatusReducer","IncidentLogReducer","allReducer","combineReducers","incident","AppStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"8PAIMA,E,YACF,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,KAAMC,KAAKC,OAHD,E,iFAME,IAAD,OACfC,KAAKL,MAAMM,eACXC,aACI,kBAAM,EAAKP,MAAMM,iBAAgB,O,6CAKrCE,kB,+BAIA,OACI,6BACI,2BAAG,gLACH,+BACI,+BACA,4BACI,4CAAqB,oCAAa,uCAGlCH,KAAKL,MAAMS,WAAWC,KAAI,SAACC,EAAKC,GAC5B,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAKG,QACV,4BAAKH,EAAKC,IACV,4BAAKD,EAAKI,kB,GAjClBC,aAiDtBC,EAAqB,CACvBX,aCpDG,WACH,OAAO,SAAAY,GAAQ,OAAIC,IAAM,+CAA+CC,MACpE,SAAAC,GAAQ,OAAIA,EAASC,UACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MACvBH,MAAK,SAAAE,GAAI,OAAIJ,EAIR,CACHQ,KAAM,iBACNC,QANkCL,UDmD3BM,eARS,SAAC3B,GAAD,MAAW,CAC/BQ,WAAYR,EAAM4B,WAOkBZ,EAAzBW,CAA6C7B,GE5C7C+B,E,iLATP,OACI,6BACI,2BAAG,qDADP,6C,GAHcd,aC8CXe,E,YA3CX,aAAc,IAAD,8BACT,+CAOJC,aAAe,WACX,EAAKC,SAAS,CACVC,MAAO,UACPC,WAAY,EAAKlC,MAAMkC,YACxB,gBAZM,EAebC,cAAgB,WACZ,EAAKH,SAAS,CACVC,MAAO,WACPG,YAAa,EAAKpC,MAAMoC,aACzB,gBAjBH,EAAKpC,MAAQ,CACTiC,MAAO,OACPC,WAAW,EACXE,YAAY,GALP,E,sEAsBJ,IAAD,OACJ,OACI,6BACI,2BAAG,8IACH,uDACA,2BAAG,6DACH,4BACI,wBAAIC,QAAS,kBAAI,EAAKN,iBAAgB,+CAEf,YAAnB3B,KAAKJ,MAAMiC,OAAqB7B,KAAKJ,MAAMkC,WAAa,kBAAC,EAAD,MAE5D,wBAAIG,QAAS,kBAAI,EAAKF,kBAAiB,8CAEhB,aAAnB/B,KAAKJ,MAAMiC,OAAsB7B,KAAKJ,MAAMoC,YAAc,kBAAC,EAAD,Y,GApC9CrB,a,OCY9BuB,EAAgB,GAWPC,EATc,WAA4C,IAA3CvC,EAA0C,uDAAlCsC,EAAkC,yCAAlBb,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,QACxD,OAAOD,GACH,IAAK,iBACD,OAAOC,EACX,QACI,OAAO1B,ICvBbsC,EAAgB,CAClB,IASWE,EAJY,WAAiC,IAAhCxC,EAA+B,uDAAzBsC,EAAyB,iCACvD,OAAOtC,GCEIyC,EALIC,YAAgB,CAC/Bd,QAASW,EACTI,SAAUH,I,QCACI,EAFEC,YAAYJ,EAAYK,YAAgBC,MCEzDC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAON,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.b98494b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { apiRequest } from './service.action'\r\n\r\nclass ServiceStatus extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            time: Date.now()\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.onApiRequest();\r\n        setInterval(\r\n            () => this.props.onApiRequest(), 5000\r\n        )\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p><i>(After necessary modification this page will show the status of the azure services. Currently it fetches data from other REST service providers)</i></p>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Service Name</td><td>Zone</td><td>Status</td>\r\n                    </tr>\r\n                    {\r\n                        this.props.localState.map((data,id)=>{\r\n                            return(\r\n                                <tr key={id}>\r\n                                    <td>{data.userId}</td>\r\n                                    <td>{data.id}</td>\r\n                                    <td>{data.title}</td>                                \r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                </table>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    localState: state.service,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onApiRequest: apiRequest\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceStatus);","import fetch from 'cross-fetch';\r\n\r\nexport function apiRequest(){\r\n    return dispatch => fetch(`https://jsonplaceholder.typicode.com/albums`).then(\r\n        response => response.json(),\r\n        error => console.log(error)\r\n    ).then(json => dispatch(handleSuccess(json)))\r\n}\r\n\r\nexport function handleSuccess(response){\r\n    return {\r\n        type: 'handle_success',\r\n        payload: response\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass IncidentLog extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p><i>(Yet to be developed)</i></p>\r\n                This page will show the incident logs\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IncidentLog;","import React, { Component } from 'react';\r\nimport ServiceStatus from './service.status.component';\r\nimport IncidentLog from './incident.log.component';\r\n\r\nclass AzureServiceDashboard extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            route: 'home',\r\n            isService: false,\r\n            isIncident: false\r\n        }\r\n    }\r\n    serviceClick = () =>{\r\n        this.setState({\r\n            route: 'service',\r\n            isService: !this.state.isService,\r\n        }, ()=>{})\r\n    }\r\n\r\n    incidentClick = () =>{\r\n        this.setState({\r\n            route: 'incident',\r\n            isIncident: !this.state.isIncident\r\n        }, ()=>{})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p><i>(A simple template for developing a dashboard consuming REST data from external systems using React and Redux)</i></p>\r\n                <h1>Azure Service Dashboard</h1>\r\n                <p><i>(Click on the item to expand)</i></p>\r\n                <ul>\r\n                    <li onClick={()=>this.serviceClick()}><h2>Service Status</h2></li>\r\n                    {\r\n                        this.state.route==='service' && this.state.isService && <ServiceStatus/>\r\n                    }\r\n                    <li onClick={()=>this.incidentClick()}><h2>Incident Logs</h2></li>\r\n                    {\r\n                        this.state.route==='incident' && this.state.isIncident && <IncidentLog/>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AzureServiceDashboard;","/*\r\nconst INITIAL_STATE = [\r\n    {\r\n        service: 'virtual-machine',\r\n        zone: 'europe',\r\n        status: 'good'\r\n    },\r\n    {\r\n        service: 'virtual-machine',\r\n        zone: 'us',\r\n        status: 'good'\r\n\r\n    }\r\n]\r\n*/\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nconst ServiceStatusReducer = (state = INITIAL_STATE, {type, payload}) =>{\r\n    switch(type){\r\n        case 'handle_success':\r\n            return payload;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ServiceStatusReducer;","const INITIAL_STATE = [\r\n    {\r\n\r\n    }\r\n];\r\n\r\nconst IncidentLogReducer = (state=INITIAL_STATE, action) =>{\r\n    return state;\r\n}\r\n\r\nexport default IncidentLogReducer;","import { combineReducers } from 'redux';\r\nimport ServiceStatusReducer from './service.status.reducer';\r\nimport IncidentLogReducer from './incident.log.reducer';\r\n\r\nconst allReducer = combineReducers({\r\n    service: ServiceStatusReducer,\r\n    incident: IncidentLogReducer\r\n})\r\n\r\nexport default allReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport allReducer from './all.reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst AppStore = createStore(allReducer, applyMiddleware(thunk));\r\n\r\nexport default AppStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AzureServiceDashboard from './azure.service.dashboard';\nimport { Provider } from 'react-redux';\nimport AppStore from './app.store';\n\nReactDOM.render(\n    <Provider store={AppStore}>\n        <AzureServiceDashboard />\n    </Provider>, \n    document.getElementById('root'));"],"sourceRoot":""}